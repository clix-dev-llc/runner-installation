{{- $secretValues := ( .Files.Get "secret-values.yaml" | fromYaml ) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-installer
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: {{ include "codefresh-runner.serviceAccountName" . }}
      containers:
      - name: codefresh     
        image: {{ .Values.installer.image }}
        imagePullPolicy: {{ .Values.installer.imagePullPolicy | default "Always" }}
        command:
        - /usr/local/bin/installer.sh
        env:
          - name: CODEFRESH_TOKEN
          {{- if .Values.codefreshTokenSecret }}
            valueFrom:
              secretKeyRef:
                name: {{ required "Require a secret name that contains the codefresh token" .Values.codefreshTokenSecret.name }}
                key: {{ required "Require a secret key that contains the codefresh token" .Values.codefreshTokenSecret.key }}
          {{- else }}
            value: {{ required "codefresh token is missing " ( coalesce .Values.Token $secretValues.Token ) }}
          {{- end }}
          {{- if .Values.env }}
          {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end}}
          {{- end}}
        volumeMounts:
        - name: installer-cm
          mountPath: /usr/local/bin/installer.sh
          subPath: installer.sh
        - name: installer-cm
          mountPath: /etc/codefresh/runner-values.yaml
          subPath: runner-values.yaml
      volumes:
        - name: installer-cm
          configMap:
            name: {{ .Release.Name }}-installer
            defaultMode: 0777               
      restartPolicy: Never
      {{- if .Values.installer.imagePullSecrets }}
      imagePullSecrets:
      {{- range $sec := .Values.installer.imagePullSecrets }}
        - name: {{$sec | quote }}
      {{- end }}
      {{- end }}

  backoffLimit: 1